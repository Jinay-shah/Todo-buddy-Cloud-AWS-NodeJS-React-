{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dal_project\\\\Advance_Cloud_5409\\\\TA\\\\frontend\\\\src\\\\Components\\\\userRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/userRegistration.css'; // Import your CSS file\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [emptyFieldError, setEmptyFieldError] = useState('');\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    // Navigate to the login page when the \"Login here\" link is clicked\n    history.push('/login');\n  };\n\n  // Validation function for email format\n  const validateEmail = email => {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailPattern.test(email);\n  };\n\n  // Validation function for password format\n  const validatePassword = password => {\n    // Password should be at least 8 characters long and contain at least one uppercase letter and one numeric digit\n    const passwordPattern = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\n    return passwordPattern.test(password);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset error messages and success message\n    setEmailError('');\n    setPasswordError('');\n    setEmptyFieldError('');\n    setRegistrationSuccess(false);\n\n    // Check for empty fields\n    if (!name || !email || !username || !password) {\n      setEmptyFieldError('All fields are required');\n      return;\n    }\n\n    // Check email format\n    if (!validateEmail(email)) {\n      setEmailError('Invalid email format');\n      return;\n    }\n\n    // Check password format\n    if (!validatePassword(password)) {\n      setPasswordError('Invalid password format. At least one Upper case and numeric value required!');\n      return;\n    }\n\n    // If all validations pass, send a registration request to the backend API\n    try {\n      const response = await fetch('https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/user-registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        // Registration was successful\n        setRegistrationSuccess(true);\n      } else {\n        // Registration failed, handle the error\n        // You can display an error message to the user based on the response status or content\n        console.error('Registration failed');\n      }\n    } catch (error) {\n      console.error('Error during registration:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register to start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), registrationSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: [\"Registration successful!\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), emptyFieldError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: emptyFieldError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"registration-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-link\",\n          onClick: handleLoginClick,\n          children: \"Already registered? Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"xXp7eHRYQ8ktMakwH4KdkDwcDGI=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegistrationForm","_s","name","setName","email","setEmail","username","setUsername","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","emptyFieldError","setEmptyFieldError","registrationSuccess","setRegistrationSuccess","navigate","handleLoginClick","history","push","validateEmail","emailPattern","test","validatePassword","passwordPattern","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Dal_project/Advance_Cloud_5409/TA/frontend/src/Components/userRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/userRegistration.css'; // Import your CSS file\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction RegistrationForm() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [emptyFieldError, setEmptyFieldError] = useState('');\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginClick = () => {\r\n    // Navigate to the login page when the \"Login here\" link is clicked\r\n    history.push('/login');\r\n  };\r\n  \r\n  // Validation function for email format\r\n  const validateEmail = (email) => {\r\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  // Validation function for password format\r\n  const validatePassword = (password) => {\r\n    // Password should be at least 8 characters long and contain at least one uppercase letter and one numeric digit\r\n    const passwordPattern = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    return passwordPattern.test(password);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset error messages and success message\r\n    setEmailError('');\r\n    setPasswordError('');\r\n    setEmptyFieldError('');\r\n    setRegistrationSuccess(false);\r\n\r\n    // Check for empty fields\r\n    if (!name || !email || !username || !password) {\r\n      setEmptyFieldError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    // Check email format\r\n    if (!validateEmail(email)) {\r\n      setEmailError('Invalid email format');\r\n      return;\r\n    }\r\n\r\n    // Check password format\r\n    if (!validatePassword(password)) {\r\n      setPasswordError('Invalid password format. At least one Upper case and numeric value required!');\r\n      return;\r\n    }\r\n\r\n    // If all validations pass, send a registration request to the backend API\r\n    try {\r\n      const response = await fetch('https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/user-registration', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Registration was successful\r\n        setRegistrationSuccess(true);\r\n        \r\n      } else {\r\n        // Registration failed, handle the error\r\n        // You can display an error message to the user based on the response status or content\r\n        console.error('Registration failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registration-container\">\r\n      <div className=\"registration-form\">\r\n        <h2>Register to start</h2>\r\n        {registrationSuccess ? (\r\n          <div className=\"success\">\r\n            Registration successful!{' '}\r\n          </div>\r\n        ) : (      \r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {emailError && <div className=\"error\">{emailError}</div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username:</label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              {passwordError && <div className=\"error\">{passwordError}</div>}\r\n            </div>\r\n            {emptyFieldError && <div className=\"error\">{emptyFieldError}</div>}\r\n            <button type=\"submit\" className=\"registration-button\">\r\n              Register\r\n            </button>\r\n            <span className=\"login-link\" onClick={handleLoginClick}>\r\n              Already registered? Login here\r\n            </span>\r\n          </form>\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}