{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dal_project\\\\Advance_Cloud_5409\\\\TA\\\\frontend\\\\src\\\\Components\\\\userRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/userRegistration.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({}); // State for storing validation errors\n\n  // Validation function to check if a field is empty\n  const isFieldEmpty = value => {\n    return value.trim() === '';\n  };\n\n  // Validation function to check if an email is valid\n  const isValidEmail = value => {\n    // Basic email validation regex (you can use a more comprehensive regex)\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(value);\n  };\n\n  // Validation function to check if the password meets your criteria\n  const isValidPassword = value => {\n    // You can add your password validation logic here\n    return value.length >= 6;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Perform validation\n    const validationErrors = {};\n    if (isFieldEmpty(name)) {\n      validationErrors.name = 'Name is required';\n    }\n    if (!isValidEmail(email)) {\n      validationErrors.email = 'Email is not valid';\n    }\n    if (isFieldEmpty(username)) {\n      validationErrors.username = 'Username is required';\n    }\n    if (!isValidPassword(password)) {\n      validationErrors.password = 'Password must be at least 6 characters';\n    }\n\n    // If there are validation errors, set them in state\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n    }\n  };\n  // Add form submission logic here\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register to start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"registration-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"SKqLB6N8RKQRH/uyHmGn0ZUssLs=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegistrationForm","_s","name","setName","email","setEmail","username","setUsername","password","setPassword","errors","setErrors","isFieldEmpty","value","trim","isValidEmail","emailRegex","test","isValidPassword","length","handleSubmit","e","preventDefault","validationErrors","Object","keys","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","target","_c","$RefreshReg$"],"sources":["C:/Dal_project/Advance_Cloud_5409/TA/frontend/src/Components/userRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/userRegistration.css'; // Import your CSS file\r\n\r\nfunction RegistrationForm() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({}); // State for storing validation errors\r\n\r\n  // Validation function to check if a field is empty\r\n  const isFieldEmpty = (value) => {\r\n    return value.trim() === '';\r\n  };\r\n\r\n  // Validation function to check if an email is valid\r\n  const isValidEmail = (value) => {\r\n    // Basic email validation regex (you can use a more comprehensive regex)\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(value);\r\n  };\r\n\r\n  // Validation function to check if the password meets your criteria\r\n  const isValidPassword = (value) => {\r\n    // You can add your password validation logic here\r\n    return value.length >= 6;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Perform validation\r\n    const validationErrors = {};\r\n    if (isFieldEmpty(name)) {\r\n      validationErrors.name = 'Name is required';\r\n    }\r\n    if (!isValidEmail(email)) {\r\n      validationErrors.email = 'Email is not valid';\r\n    }\r\n    if (isFieldEmpty(username)) {\r\n      validationErrors.username = 'Username is required';\r\n    }\r\n    if (!isValidPassword(password)) {\r\n      validationErrors.password = 'Password must be at least 6 characters';\r\n    }\r\n\r\n    // If there are validation errors, set them in state\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n    } \r\n  };\r\n  // Add form submission logic here\r\n  return (\r\n    <div className=\"registration-container\">\r\n    \r\n      <div className=\"registration-form\">\r\n        <h2>Register to start</h2>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"registration-button\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}