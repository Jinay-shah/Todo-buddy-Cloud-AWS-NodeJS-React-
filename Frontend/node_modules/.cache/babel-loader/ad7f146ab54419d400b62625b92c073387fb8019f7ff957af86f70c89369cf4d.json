{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dal_project\\\\Advance_Cloud_5409\\\\TA\\\\frontend\\\\src\\\\Components\\\\view-task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport '../Styles/view-task.css'; // Import your CSS file\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewTask() {\n  _s();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    navigate('/login');\n  };\n\n  // Define state variables for tasks and filters\n  const [tasks, setTasks] = useState([]);\n  const [titleFilter, setTitleFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('none');\n  const [editedTask, setEditedTask] = useState({\n    title: \"\",\n    description: \"\",\n    dueDate: \"\",\n    status: \"\"\n  });\n  const [openEditModal, setOpenEditModal] = useState(false);\n  //-----------------------------------------------------------------------------------------------------------\n  useEffect(() => {\n    // Define a function to fetch all tasks\n    const fetchAllTasks = async () => {\n      const userId = localStorage.getItem('userId');\n      console.log(userId);\n      try {\n        const response = await fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/get-user-tasks?userId=${userId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json' // Set the content type as needed\n            // Add any other headers your API requires\n          }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data.tasks);\n        } else {\n          console.error('Failed to fetch tasks');\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    // Fetch all tasks only when titleFilter is empty and statusFilter is \"none\"\n    if (titleFilter === '' && statusFilter === 'none') {\n      fetchAllTasks();\n    }\n  }, [titleFilter, statusFilter]);\n  //---------------------------------------------------------------------------------------------------------------\n  useEffect(() => {\n    // Fetch tasks from your API when statusFilter changes\n    const fetchTasks = async () => {\n      try {\n        // Retrieve the userId from local storage\n        const userId = localStorage.getItem('userId');\n        const response = await fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/getTaskByStatus?userId=${userId}&taskstatus=${statusFilter}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          console.log('success');\n          const data = await response.json();\n          setTasks(data.tasks);\n        } else {\n          console.error('Error fetching tasks:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    if (statusFilter !== 'none') {\n      fetchTasks();\n    }\n  }, [statusFilter]);\n\n  //------------------------------------------------------------------------------------------------------------------------\n  const fetchTasksByTitle = useCallback(async () => {\n    try {\n      const userId = localStorage.getItem('userId');\n      const apiEndpoint = `https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/getTaskByTitle?userId=${userId}&title=${titleFilter}`;\n      const response = await fetch(apiEndpoint, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log('Success');\n        const data = await response.json();\n        console.log(data);\n        setTasks(data.task || []);\n      } else {\n        console.error('Error fetching tasks:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [titleFilter]);\n  useEffect(() => {\n    if (titleFilter !== '') {\n      fetchTasksByTitle();\n    } else {\n      setTasks([]);\n    }\n  }, [titleFilter, fetchTasksByTitle]);\n  //----------------------------------------------------------------------------\n\n  const handleEditTask = taskId => {\n    console.log();\n    // Find the task to edit by taskId\n    const taskToEdit = tasks.find(task => task.taskId === taskId);\n\n    // Set the state with the current task details for editing\n    setEditedTask({\n      id: taskToEdit.id,\n      title: taskToEdit.title,\n      description: taskToEdit.description,\n      dueDate: taskToEdit.dueDate,\n      status: taskToEdit.status\n    });\n\n    // Open the edit modal or form (you can implement this part based on your UI)\n    setOpenEditModal(true);\n  };\n\n  // Function to handle the form submission after editing\n  const handleEditTaskSubmit = e => {\n    e.preventDefault();\n    const userId = localStorage.getItem('userId');\n\n    // Make a PUT request to update the task with editedTask data\n    fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/update-task?id=${editedTask.id}&userId=${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editedTask)\n    }).then(response => {\n      if (response.ok) {\n        console.log('Task updated successfully');\n        setOpenEditModal(false); // Close the edit modal\n        // You may want to refresh the task list or update the task in your local state\n      } else {\n        console.error('Task update failed');\n      }\n    }).catch(error => {\n      console.error('Error updating task:', error);\n    });\n  };\n  const handleDeleteTask = taskId => {\n    // Confirm with the user before deleting\n    const confirmDelete = window.confirm('Are you sure you want to delete this task?');\n    if (!confirmDelete) {\n      return; // User canceled the deletion\n    }\n    // Make a DELETE request to your API endpoint to delete the task\n    fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/delete-task?id=${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n        // Add any other headers or authentication tokens if needed\n      }\n    }).then(response => {\n      if (response.ok) {\n        // Task deletion was successful\n        console.log('Task deleted successfully');\n        window.location.reload();\n      } else {\n        // Task deletion failed, handle the error\n        console.error('Task deletion failed');\n      }\n    }).catch(error => {\n      console.error('Error deleting task:', error);\n    });\n  };\n  const handleTitleSearch = e => {\n    if (e.key === 'Enter') {\n      fetchTasksByTitle();\n    }\n  };\n  const handleViewTasksClick = () => {\n    navigate('/todo');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"View Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"searchTitle\",\n        placeholder: \"Search by title\",\n        value: titleFilter,\n        onChange: e => setTitleFilter(e.target.value),\n        onKeyDown: handleTitleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filterStatus\",\n        value: statusFilter,\n        onChange: e => setStatusFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditTask(task.taskId),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(task.taskId),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, task.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), openEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditTaskSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"editTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"editTitle\",\n          value: editedTask.title,\n          onChange: e => setEditedTask({\n            ...editedTask,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"editDescription\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"editDescription\",\n          value: editedTask.description,\n          onChange: e => setEditedTask({\n            ...editedTask,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"editDueDate\",\n          children: \"Due Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"editDueDate\",\n          value: editedTask.dueDate,\n          onChange: e => setEditedTask({\n            ...editedTask,\n            dueDate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"editStatus\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"editStatus\",\n          value: editedTask.status,\n          onChange: e => setEditedTask({\n            ...editedTask,\n            status: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenEditModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-task-button\",\n      onClick: handleViewTasksClick,\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewTask, \"2qAtV14dl/H5AjwIw9gpSkGO5x0=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewTask;\nexport default ViewTask;\nvar _c;\n$RefreshReg$(_c, \"ViewTask\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","ViewTask","_s","navigate","handleLogout","tasks","setTasks","titleFilter","setTitleFilter","statusFilter","setStatusFilter","editedTask","setEditedTask","title","description","dueDate","status","openEditModal","setOpenEditModal","fetchAllTasks","userId","localStorage","getItem","console","log","response","fetch","method","headers","ok","data","json","error","fetchTasks","fetchTasksByTitle","apiEndpoint","task","handleEditTask","taskId","taskToEdit","find","id","handleEditTaskSubmit","e","preventDefault","body","JSON","stringify","then","catch","handleDeleteTask","confirmDelete","window","confirm","location","reload","handleTitleSearch","key","handleViewTasksClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","map","onSubmit","htmlFor","_c","$RefreshReg$"],"sources":["C:/Dal_project/Advance_Cloud_5409/TA/frontend/src/Components/view-task.js"],"sourcesContent":["import React, { useState, useEffect,useCallback } from 'react';\r\nimport '../Styles/view-task.css'; // Import your CSS file\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ViewTask() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  // Define state variables for tasks and filters\r\n  const [tasks, setTasks] = useState([]);\r\n  const [titleFilter, setTitleFilter] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('none'); \r\n  const [editedTask, setEditedTask] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    dueDate: \"\",\r\n    status: \"\",\r\n  });\r\n     \r\n  const [openEditModal, setOpenEditModal] = useState(false); \r\n//-----------------------------------------------------------------------------------------------------------\r\n  useEffect(() => {\r\n    // Define a function to fetch all tasks\r\n    const fetchAllTasks = async () => {\r\n      const userId = localStorage.getItem('userId');\r\n        console.log(userId);\r\n        try {\r\n        const response = await fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/get-user-tasks?userId=${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n        'Content-Type': 'application/json', // Set the content type as needed\r\n    // Add any other headers your API requires\r\n        }\r\n});\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTasks(data.tasks); \r\n        } else {\r\n          console.error('Failed to fetch tasks');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch all tasks only when titleFilter is empty and statusFilter is \"none\"\r\n    if (titleFilter === '' && statusFilter === 'none') {\r\n      fetchAllTasks();\r\n    }\r\n  }, [titleFilter, statusFilter]);\r\n//---------------------------------------------------------------------------------------------------------------\r\n  useEffect(() => {\r\n    // Fetch tasks from your API when statusFilter changes\r\n    const fetchTasks = async () => {\r\n      try {\r\n        // Retrieve the userId from local storage\r\n        const userId = localStorage.getItem('userId');\r\n  \r\n        const response = await fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/getTaskByStatus?userId=${userId}&taskstatus=${statusFilter}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          console.log('success');\r\n          const data = await response.json();\r\n          setTasks(data.tasks);\r\n        } else {\r\n          console.error('Error fetching tasks:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n    if (statusFilter !== 'none'){\r\n    fetchTasks();\r\n    }\r\n  }, [statusFilter]);\r\n\r\n  //------------------------------------------------------------------------------------------------------------------------\r\n  const fetchTasksByTitle = useCallback(async () => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      const apiEndpoint = `https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/getTaskByTitle?userId=${userId}&title=${titleFilter}`;\r\n      const response = await fetch(apiEndpoint, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Success');\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setTasks(data.task || []);\r\n      } else {\r\n        console.error('Error fetching tasks:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  }, [titleFilter]);\r\n\r\n  useEffect(() => {\r\n    if (titleFilter !== '') {\r\n      fetchTasksByTitle();\r\n    }\r\n    else{\r\n      setTasks([]);\r\n    }\r\n  }, [titleFilter, fetchTasksByTitle]);\r\n//----------------------------------------------------------------------------\r\n\r\n  const handleEditTask = (taskId) => {\r\n    console.log()\r\n    // Find the task to edit by taskId\r\n    const taskToEdit = tasks.find((task) => task.taskId === taskId);\r\n  \r\n    // Set the state with the current task details for editing\r\n    setEditedTask({\r\n      id: taskToEdit.id,\r\n      title: taskToEdit.title,\r\n      description: taskToEdit.description,\r\n      dueDate: taskToEdit.dueDate,\r\n      status: taskToEdit.status,\r\n    });\r\n  \r\n    // Open the edit modal or form (you can implement this part based on your UI)\r\n    setOpenEditModal(true);\r\n  };\r\n  \r\n  // Function to handle the form submission after editing\r\n  const handleEditTaskSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    // Make a PUT request to update the task with editedTask data\r\n    fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/update-task?id=${editedTask.id}&userId=${userId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(editedTask),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          console.log('Task updated successfully');\r\n          setOpenEditModal(false); // Close the edit modal\r\n          // You may want to refresh the task list or update the task in your local state\r\n        } else {\r\n          console.error('Task update failed');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating task:', error);\r\n      });\r\n  };\r\n  \r\n  \r\n\r\n  const handleDeleteTask = (taskId) => {\r\n    // Confirm with the user before deleting\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this task?');\r\n  \r\n    if (!confirmDelete) {\r\n      return; // User canceled the deletion\r\n    }\r\n    // Make a DELETE request to your API endpoint to delete the task\r\n    fetch(`https://ing0p7y9va.execute-api.us-east-1.amazonaws.com/delete-task?id=${taskId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add any other headers or authentication tokens if needed\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          // Task deletion was successful\r\n          console.log('Task deleted successfully');\r\n          window.location.reload();\r\n        } else {\r\n          // Task deletion failed, handle the error\r\n          console.error('Task deletion failed');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting task:', error);\r\n      });\r\n  };\r\n  \r\n\r\n  const handleTitleSearch = (e) => {\r\n    if (e.key === 'Enter') {\r\n      fetchTasksByTitle();\r\n    }\r\n  };\r\n\r\n  const handleViewTasksClick = () => {\r\n    navigate('/todo');\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-task-container\">\r\n      <button className=\"logout-button\" onClick={handleLogout}>\r\n        Logout\r\n      </button>\r\n      <h1 className=\"header\">View Your Tasks</h1>\r\n      <div className=\"filter-options\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"searchTitle\"\r\n          placeholder=\"Search by title\"\r\n          value={titleFilter}\r\n          onChange={(e) => setTitleFilter(e.target.value)}\r\n          onKeyDown={handleTitleSearch}\r\n        />\r\n        <select\r\n          id=\"filterStatus\"\r\n          value={statusFilter}\r\n          onChange={(e) => setStatusFilter(e.target.value)}\r\n        >\r\n          <option value=\"none\">None</option>\r\n          <option value=\"pending\">Pending</option>\r\n          <option value=\"completed\">Completed</option>\r\n        </select>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Due Date</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.taskId}>\r\n              <td>{task.title}</td>\r\n              <td>{task.description}</td>\r\n              <td>{task.dueDate}</td>\r\n              <td>{task.status}</td>\r\n              <td>\r\n                <button onClick={() => handleEditTask(task.taskId)}>Edit</button>\r\n                <button onClick={() => handleDeleteTask(task.taskId)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {openEditModal && (\r\n        <div className=\"modal\">\r\n        <h2>Edit Task</h2>\r\n        <form onSubmit={handleEditTaskSubmit}>\r\n          <label htmlFor=\"editTitle\">Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"editTitle\"\r\n            value={editedTask.title}\r\n            onChange={(e) =>\r\n              setEditedTask({ ...editedTask, title: e.target.value })\r\n            }\r\n          />\r\n          <label htmlFor=\"editDescription\">Description:</label>\r\n          <textarea\r\n            id=\"editDescription\"\r\n            value={editedTask.description}\r\n            onChange={(e) =>\r\n              setEditedTask({ ...editedTask, description: e.target.value })\r\n            }\r\n          ></textarea>\r\n          <label htmlFor=\"editDueDate\">Due Date:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"editDueDate\"\r\n            value={editedTask.dueDate}\r\n            onChange={(e) =>\r\n              setEditedTask({ ...editedTask, dueDate: e.target.value })\r\n            }\r\n          />\r\n          <label htmlFor=\"editStatus\">Status:</label>\r\n          <select\r\n            id=\"editStatus\"\r\n            value={editedTask.status}\r\n            onChange={(e) =>\r\n              setEditedTask({ ...editedTask, status: e.target.value })\r\n            }\r\n          >\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n          <button type=\"submit\">Save</button>\r\n          <button onClick={() => setOpenEditModal(false)}>Cancel</button>\r\n        </form>\r\n      </div>\r\n      \r\n      )}\r\n      <button\r\n        className=\"create-task-button\"\r\n        onClick={handleViewTasksClick}\r\n      >\r\n        Create task\r\n      </button>\r\n    </div>\r\n  );\r\n  }\r\n\r\nexport default ViewTask;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAACC,WAAW,QAAQ,OAAO;AAC9D,OAAO,yBAAyB,CAAC,CAAC;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC;IAC3CkB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC3D;EACEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;MACnB,IAAI;QACJ,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,gFAA+EN,MAAO,EAAC,EAAE;UACvHO,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACT,cAAc,EAAE,kBAAkB,CAAE;YACxC;UACI;QACR,CAAC,CAAC;;QACM,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCzB,QAAQ,CAACwB,IAAI,CAACzB,KAAK,CAAC;QACtB,CAAC,MAAM;UACLkB,OAAO,CAACS,KAAK,CAAC,uBAAuB,CAAC;QACxC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;;IAED;IACA,IAAIzB,WAAW,KAAK,EAAE,IAAIE,YAAY,KAAK,MAAM,EAAE;MACjDU,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACZ,WAAW,EAAEE,YAAY,CAAC,CAAC;EACjC;EACEb,SAAS,CAAC,MAAM;IACd;IACA,MAAMqC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMb,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAE7C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,iFAAgFN,MAAO,eAAcX,YAAa,EAAC,EAAE;UACjJkB,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACfN,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtB,MAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCzB,QAAQ,CAACwB,IAAI,CAACzB,KAAK,CAAC;QACtB,CAAC,MAAM;UACLkB,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEP,QAAQ,CAACT,MAAM,CAAC;QACzD;MACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,IAAIvB,YAAY,KAAK,MAAM,EAAC;MAC5BwB,UAAU,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACxB,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMyB,iBAAiB,GAAGrC,WAAW,CAAC,YAAY;IAChD,IAAI;MACF,MAAMuB,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,MAAMa,WAAW,GAAI,gFAA+Ef,MAAO,UAASb,WAAY,EAAC;MACjI,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAACS,WAAW,EAAE;QACxCR,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfN,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtB,MAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;QACjBxB,QAAQ,CAACwB,IAAI,CAACM,IAAI,IAAI,EAAE,CAAC;MAC3B,CAAC,MAAM;QACLb,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEP,QAAQ,CAACT,MAAM,CAAC;MACzD;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,CAACzB,WAAW,CAAC,CAAC;EAEjBX,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,KAAK,EAAE,EAAE;MACtB2B,iBAAiB,CAAC,CAAC;IACrB,CAAC,MACG;MACF5B,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC,EAAE,CAACC,WAAW,EAAE2B,iBAAiB,CAAC,CAAC;EACtC;;EAEE,MAAMG,cAAc,GAAIC,MAAM,IAAK;IACjCf,OAAO,CAACC,GAAG,CAAC,CAAC;IACb;IACA,MAAMe,UAAU,GAAGlC,KAAK,CAACmC,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACE,MAAM,KAAKA,MAAM,CAAC;;IAE/D;IACA1B,aAAa,CAAC;MACZ6B,EAAE,EAAEF,UAAU,CAACE,EAAE;MACjB5B,KAAK,EAAE0B,UAAU,CAAC1B,KAAK;MACvBC,WAAW,EAAEyB,UAAU,CAACzB,WAAW;MACnCC,OAAO,EAAEwB,UAAU,CAACxB,OAAO;MAC3BC,MAAM,EAAEuB,UAAU,CAACvB;IACrB,CAAC,CAAC;;IAEF;IACAE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMwB,oBAAoB,GAAIC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMxB,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;;IAE7C;IACAI,KAAK,CAAE,yEAAwEf,UAAU,CAAC8B,EAAG,WAAUrB,MAAO,EAAC,EAAE;MAC/GO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpC,UAAU;IACjC,CAAC,CAAC,CACCqC,IAAI,CAAEvB,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACI,EAAE,EAAE;QACfN,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCN,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;QACzB;MACF,CAAC,MAAM;QACLK,OAAO,CAACS,KAAK,CAAC,oBAAoB,CAAC;MACrC;IACF,CAAC,CAAC,CACDiB,KAAK,CAAEjB,KAAK,IAAK;MAChBT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAID,MAAMkB,gBAAgB,GAAIZ,MAAM,IAAK;IACnC;IACA,MAAMa,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC;IAElF,IAAI,CAACF,aAAa,EAAE;MAClB,OAAO,CAAC;IACV;IACA;IACAzB,KAAK,CAAE,yEAAwEY,MAAO,EAAC,EAAE;MACvFX,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF;IACF,CAAC,CAAC,CACCoB,IAAI,CAAEvB,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACI,EAAE,EAAE;QACf;QACAN,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC4B,MAAM,CAACE,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAC,MAAM;QACL;QACAhC,OAAO,CAACS,KAAK,CAAC,sBAAsB,CAAC;MACvC;IACF,CAAC,CAAC,CACDiB,KAAK,CAAEjB,KAAK,IAAK;MAChBT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAGD,MAAMwB,iBAAiB,GAAIb,CAAC,IAAK;IAC/B,IAAIA,CAAC,CAACc,GAAG,KAAK,OAAO,EAAE;MACrBvB,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,MAAMwB,oBAAoB,GAAGA,CAAA,KAAM;IACjCvD,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,oBACEH,OAAA;IAAK2D,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC5D,OAAA;MAAQ2D,SAAS,EAAC,eAAe;MAACE,OAAO,EAAEzD,YAAa;MAAAwD,QAAA,EAAC;IAEzD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjE,OAAA;MAAI2D,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CjE,OAAA;MAAK2D,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B5D,OAAA;QACEkE,IAAI,EAAC,MAAM;QACXzB,EAAE,EAAC,aAAa;QAChB0B,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAE7D,WAAY;QACnB8D,QAAQ,EAAG1B,CAAC,IAAKnC,cAAc,CAACmC,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;QAChDG,SAAS,EAAEf;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFjE,OAAA;QACEyC,EAAE,EAAC,cAAc;QACjB2B,KAAK,EAAE3D,YAAa;QACpB4D,QAAQ,EAAG1B,CAAC,IAAKjC,eAAe,CAACiC,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;QAAAR,QAAA,gBAEjD5D,OAAA;UAAQoE,KAAK,EAAC,MAAM;UAAAR,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCjE,OAAA;UAAQoE,KAAK,EAAC,SAAS;UAAAR,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCjE,OAAA;UAAQoE,KAAK,EAAC,WAAW;UAAAR,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNjE,OAAA;MAAA4D,QAAA,gBACE5D,OAAA;QAAA4D,QAAA,eACE5D,OAAA;UAAA4D,QAAA,gBACE5D,OAAA;YAAA4D,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdjE,OAAA;YAAA4D,QAAA,EAAI;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBjE,OAAA;YAAA4D,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBjE,OAAA;YAAA4D,QAAA,EAAI;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfjE,OAAA;YAAA4D,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRjE,OAAA;QAAA4D,QAAA,EACGvD,KAAK,CAACmE,GAAG,CAAEpC,IAAI,iBACdpC,OAAA;UAAA4D,QAAA,gBACE5D,OAAA;YAAA4D,QAAA,EAAKxB,IAAI,CAACvB;UAAK;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBjE,OAAA;YAAA4D,QAAA,EAAKxB,IAAI,CAACtB;UAAW;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BjE,OAAA;YAAA4D,QAAA,EAAKxB,IAAI,CAACrB;UAAO;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBjE,OAAA;YAAA4D,QAAA,EAAKxB,IAAI,CAACpB;UAAM;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBjE,OAAA;YAAA4D,QAAA,gBACE5D,OAAA;cAAQ6D,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAACD,IAAI,CAACE,MAAM,CAAE;cAAAsB,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjEjE,OAAA;cAAQ6D,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACd,IAAI,CAACE,MAAM,CAAE;cAAAsB,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC;QAAA,GARE7B,IAAI,CAACE,MAAM;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAShB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEPhD,aAAa,iBACZjB,OAAA;MAAK2D,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACtB5D,OAAA;QAAA4D,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBjE,OAAA;QAAMyE,QAAQ,EAAE/B,oBAAqB;QAAAkB,QAAA,gBACnC5D,OAAA;UAAO0E,OAAO,EAAC,WAAW;UAAAd,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzCjE,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXzB,EAAE,EAAC,WAAW;UACd2B,KAAK,EAAEzD,UAAU,CAACE,KAAM;UACxBwD,QAAQ,EAAG1B,CAAC,IACV/B,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEE,KAAK,EAAE8B,CAAC,CAAC2B,MAAM,CAACF;UAAM,CAAC;QACvD;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFjE,OAAA;UAAO0E,OAAO,EAAC,iBAAiB;UAAAd,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrDjE,OAAA;UACEyC,EAAE,EAAC,iBAAiB;UACpB2B,KAAK,EAAEzD,UAAU,CAACG,WAAY;UAC9BuD,QAAQ,EAAG1B,CAAC,IACV/B,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEG,WAAW,EAAE6B,CAAC,CAAC2B,MAAM,CAACF;UAAM,CAAC;QAC7D;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACZjE,OAAA;UAAO0E,OAAO,EAAC,aAAa;UAAAd,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CjE,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXzB,EAAE,EAAC,aAAa;UAChB2B,KAAK,EAAEzD,UAAU,CAACI,OAAQ;UAC1BsD,QAAQ,EAAG1B,CAAC,IACV/B,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEI,OAAO,EAAE4B,CAAC,CAAC2B,MAAM,CAACF;UAAM,CAAC;QACzD;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFjE,OAAA;UAAO0E,OAAO,EAAC,YAAY;UAAAd,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjE,OAAA;UACEyC,EAAE,EAAC,YAAY;UACf2B,KAAK,EAAEzD,UAAU,CAACK,MAAO;UACzBqD,QAAQ,EAAG1B,CAAC,IACV/B,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEK,MAAM,EAAE2B,CAAC,CAAC2B,MAAM,CAACF;UAAM,CAAC,CACxD;UAAAR,QAAA,gBAED5D,OAAA;YAAQoE,KAAK,EAAC,SAAS;YAAAR,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCjE,OAAA;YAAQoE,KAAK,EAAC,WAAW;YAAAR,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACTjE,OAAA;UAAQkE,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCjE,OAAA;UAAQ6D,OAAO,EAAEA,CAAA,KAAM3C,gBAAgB,CAAC,KAAK,CAAE;UAAA0C,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAEJ,eACDjE,OAAA;MACE2D,SAAS,EAAC,oBAAoB;MAC9BE,OAAO,EAAEH,oBAAqB;MAAAE,QAAA,EAC/B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAER;AAAC/D,EAAA,CArTMD,QAAQ;EAAA,QACEH,WAAW;AAAA;AAAA6E,EAAA,GADrB1E,QAAQ;AAuTjB,eAAeA,QAAQ;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}