{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dal_project\\\\Advance_Cloud_5409\\\\TA\\\\frontend\\\\src\\\\Components\\\\userLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/userLogin.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  // Validation function for username format\n  const validateUsername = username => {\n    // Username should be at least 3 characters long\n    return username.length >= 3;\n  };\n\n  // Validation function for password format\n  const validatePassword = password => {\n    // Password should be at least 8 characters long and contain at least one uppercase letter and one numeric digit\n    const passwordPattern = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\n    return passwordPattern.test(password);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Reset error messages\n    setUsernameError('');\n    setPasswordError('');\n\n    // Check username format\n    if (!validateUsername(username)) {\n      setUsernameError('Username should be at least 3 characters long');\n      return;\n    }\n\n    // Check password format\n    if (!validatePassword(password)) {\n      setPasswordError('Password should be at least 8 characters long and contain at least one uppercase letter and one numeric digit');\n      return;\n    }\n\n    // If all validations pass, you can proceed with login logic\n    // Send a request to your backend API for authentication here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"r1wiWNQyLl+vlW1xMlavQGs4Wgw=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","validateUsername","length","validatePassword","passwordPattern","test","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Dal_project/Advance_Cloud_5409/TA/frontend/src/Components/userLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/userLogin.css'; // Import your CSS file\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n\r\n  // Validation function for username format\r\n  const validateUsername = (username) => {\r\n    // Username should be at least 3 characters long\r\n    return username.length >= 3;\r\n  };\r\n\r\n  // Validation function for password format\r\n  const validatePassword = (password) => {\r\n    // Password should be at least 8 characters long and contain at least one uppercase letter and one numeric digit\r\n    const passwordPattern = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    return passwordPattern.test(password);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset error messages\r\n    setUsernameError('');\r\n    setPasswordError('');\r\n\r\n    // Check username format\r\n    if (!validateUsername(username)) {\r\n      setUsernameError('Username should be at least 3 characters long');\r\n      return;\r\n    }\r\n\r\n    // Check password format\r\n    if (!validatePassword(password)) {\r\n      setPasswordError('Password should be at least 8 characters long and contain at least one uppercase letter and one numeric digit');\r\n      return;\r\n    }\r\n\r\n    // If all validations pass, you can proceed with login logic\r\n    // Send a request to your backend API for authentication here\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            {usernameError && <div className=\"error\">{usernameError}</div>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {passwordError && <div className=\"error\">{passwordError}</div>}\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}